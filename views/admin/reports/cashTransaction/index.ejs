<%- include('../../../layouts/adminHeader') %>

<%
//Format Number
function formatNumber(number){
    return number.toFixed(2).replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
}

//Capitalize Every first letter
// const titleCase = (phrase) => {
//     return phrase
//             .toLowerCase()
//             .split(' ')
//             .map(word => word.charAt(0).toUpperCase() + word.slice(1))
//             .join(' ');
// };

%>

<br>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow p-3">
                <h4>Cash Flow Statement</h4>

                <form action="/report/cashTransaction" method="post" class="myform">
                    <div class="input-group">

                        <div class="input-group-prepend">
                            <div class="input-group-text bg-dark"><b>From</b></div>
                        </div>
                        <input type="date" required name="from" class="form-control"> &nbsp;
                        <div class="input-group-prepend">
                            <div class="input-group-text bg-dark"><b>To</b></div>
                        </div>
                        <input type="date" required name="to" class="form-control">&nbsp;
                        <button type="submit" class="btn btn-primary mybtn"><span class="fas fa-search"></span></button>
                    </div>
                </form>

            </div>
        </div>
    </div>
</div>



<% if (typeof from != 'undefined'){ %>


<%

    //Sales
    const sales = records.filter(record => {
        return record.saleId !== "";
    });
    const salesArray = [0];
    for (const sale of sales){
        salesArray.push(parseFloat(sale.amount));
    }
    const salesTotal = salesArray.reduce((previousValue, currentValue) => {
        return previousValue + currentValue;
    })

    //Expenses
    const expenses = records.filter(record => {
        return record.expenseId !== "";
    });
    const expensesArray = [0];
    for (const exp of expenses){
        expensesArray.push(parseFloat(exp.amount));
    }
    const expensesTotal = expensesArray.reduce((previousValue, currentValue) => {
        return previousValue + currentValue;
    })

    //Bills
    const bills = records.filter(record => {
        return record.paymentId !== "";
    });
    const billsArray = [0];
    for (const bill of bills){
        billsArray.push(parseFloat(bill.amount));
    }
    const billsTotal = billsArray.reduce((previousValue, currentValue) => {
        return previousValue + currentValue;
    })


    //Transfers
    const transfers = records.filter(record => {
        return record.transferId !== "";
    });
    const transfersArray = [0];
    for (const transfer of transfers){
        transfersArray.push(parseFloat(transfer.amount));
    }
    const transfersTotal = transfersArray.reduce((previousValue, currentValue) => {
        return previousValue + currentValue;
    })

  const totalPaid = billsTotal + expensesTotal + transfersTotal;
  const netTotal = salesTotal - totalPaid;

%>


    <div class="container" id="printArea">



        <style>
            @media print {

                .details{
                    text-align: center;
                }
                .topHeader{
                    text-align: center;
                }
                h4{
                    margin-bottom: 0;
                    font-size: 1.5em;
                }
                .btn{
                    display: none;
                }
                table{
                    width: 100%;
                    border-collapse: collapse;
                    margin-top: 0;
                }
                th{
                    text-align: left;
                }


            }
        </style>





        <div class="row">
            <div class="col">
                <button class="btn btn-success btn-sm mb-2" onclick="printInvoice();"><span class="fas fa-print"></span> Print</button>
                <div class="text-center details">
                    <span><b>CLEMONIC LIMITED</b></span><br>
                    <span>Cash Flow Statement</span><br>
                    <span><b>From</b> <%= new Date(from).toDateString() %> <b>To</b> <%= new Date(to).toDateString() %></span>
                    <hr>
                </div>
                <div class="card shadow p-3">
                    <h4 class="text-purple mb-0"><b>Cash Flow Operations</b></h4>

                    <table class="table table-bordered table-sm mt-0">


                        <tr>
                            <th colspan="3">Cash Received From</th>
                        </tr>

                        <tr>
                            <td>Sales</td>
                            <td><%= formatNumber(salesTotal) %></td>
                            <td><b><%= formatNumber(salesTotal) %></b></td>
                        </tr>

                        <tr>
                            <th colspan="3">Cash Paid For</th>
                        </tr>

                        <tr>
                            <td>bills</td>
                            <td><%= formatNumber(billsTotal) %></td>
                            <td rowspan="2"></td>
                        </tr>

                        <tr>
                            <td>Expenses</td>
                            <td><%= formatNumber(expensesTotal) %></td>

                        </tr>

                        <tr>
                            <td>Transfers</td>
                            <td><%= formatNumber(transfersTotal) %></td>
                            <td><b><%= formatNumber(totalPaid) %></b></td>
                        </tr>

                        <tr>
                            <th>Net Cash Flow Operations</th>
                            <td></td>
                            <td><b>â‚µ <%= formatNumber(netTotal) %></b></td>
                        </tr>
                        <tbody>

                        </tbody>

                    </table>

                </div>
            </div>
        </div>
    </div>

<% } %>





<%- include('../../../layouts/adminFooter') %>




<script>
    // Printout
    function printInvoice(){

        const divtoprint = document.querySelector("#printArea");
        const newWindow = window.open('','Print-Window', 'height=600, width=1000');

        newWindow.document.open();
        newWindow.document.write("<html><body onload='window.print()'>"+divtoprint.innerHTML+"</body></html>");

        newWindow.document.close();

        setTimeout(function () {
            newWindow.close();
        },2000)

    }

</script>